{"numTotalTestSuites":36,"numPassedTestSuites":36,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":85,"numPassedTests":85,"numFailedTests":0,"numPendingTests":0,"numTodoTests":0,"startTime":1758004509401,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["","CoachPolicyV2","Rate limiting & anti-repeat"],"fullName":" CoachPolicyV2 Rate limiting & anti-repeat should allow first hint immediately","status":"passed","title":"should allow first hint immediately","duration":2,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Rate limiting & anti-repeat"],"fullName":" CoachPolicyV2 Rate limiting & anti-repeat should rate limit subsequent hints to 1 per second","status":"passed","title":"should rate limit subsequent hints to 1 per second","duration":1,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Rate limiting & anti-repeat"],"fullName":" CoachPolicyV2 Rate limiting & anti-repeat should prevent duplicate hint IDs within 4 seconds","status":"passed","title":"should prevent duplicate hint IDs within 4 seconds","duration":1,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Safety outranks technique"],"fullName":" CoachPolicyV2 Safety outranks technique should prioritize loudness safety over jitter hints","status":"passed","title":"should prioritize loudness safety over jitter hints","duration":1,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Target miss vs confidence precedence"],"fullName":" CoachPolicyV2 Target miss vs confidence precedence should prefer target miss over confidence hints","status":"passed","title":"should prefer target miss over confidence hints","duration":1,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Post-utterance feedback"],"fullName":" CoachPolicyV2 Post-utterance feedback should prioritize praise for high DTW tiers","status":"passed","title":"should prioritize praise for high DTW tiers","duration":0,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Post-utterance feedback"],"fullName":" CoachPolicyV2 Post-utterance feedback should show rise hint for low tiers without end rise","status":"passed","title":"should show rise hint for low tiers without end rise","duration":1,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Post-utterance feedback"],"fullName":" CoachPolicyV2 Post-utterance feedback should show nudge for tier 3","status":"passed","title":"should show nudge for tier 3","duration":0,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Post-utterance feedback"],"fullName":" CoachPolicyV2 Post-utterance feedback should show retry for low tiers with end rise","status":"passed","title":"should show retry for low tiers with end rise","duration":0,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Loudness safety threshold"],"fullName":" CoachPolicyV2 Loudness safety threshold should trigger safety hint after 5 seconds of high loudness","status":"passed","title":"should trigger safety hint after 5 seconds of high loudness","duration":1,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Loudness safety threshold"],"fullName":" CoachPolicyV2 Loudness safety threshold should not trigger safety hint for brief loudness spikes","status":"passed","title":"should not trigger safety hint for brief loudness spikes","duration":0,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Pre-lesson briefs"],"fullName":" CoachPolicyV2 Pre-lesson briefs should provide appropriate goals for different step types","status":"passed","title":"should provide appropriate goals for different step types","duration":1,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Empty/edge cases"],"fullName":" CoachPolicyV2 Empty/edge cases should return no hints for empty history","status":"passed","title":"should return no hints for empty history","duration":0,"failureMessages":[]},{"ancestorTitles":["","CoachPolicyV2","Empty/edge cases"],"fullName":" CoachPolicyV2 Empty/edge cases should return no hints for unvoiced frames","status":"passed","title":"should return no hints for unvoiced frames","duration":1,"failureMessages":[]}],"startTime":1758004511188,"endTime":1758004511198,"status":"passed","message":"","name":"/workspace/resonai/tests/unit/coach.policy.spec.ts"},{"assertionResults":[{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness returns zero expressiveness for empty series","status":"passed","title":"returns zero expressiveness for empty series","duration":6,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness returns zero expressiveness for constant pitch","status":"passed","title":"returns zero expressiveness for constant pitch","duration":1,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness returns higher expressiveness for larger pitch variability","status":"passed","title":"returns higher expressiveness for larger pitch variability","duration":0,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness penalizes insufficient samples","status":"passed","title":"penalizes insufficient samples","duration":0,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness respects custom reference spread","status":"passed","title":"respects custom reference spread","duration":0,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness returns valid metadata","status":"passed","title":"returns valid metadata","duration":1,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness handles single sample","status":"passed","title":"handles single sample","duration":0,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness handles two samples","status":"passed","title":"handles two samples","duration":0,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness computes IQR correctly","status":"passed","title":"computes IQR correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness score01 is normalized to 0-1 range","status":"passed","title":"score01 is normalized to 0-1 range","duration":0,"failureMessages":[]},{"ancestorTitles":["","computeExpressiveness"],"fullName":" computeExpressiveness detrended calculation removes mean bias","status":"passed","title":"detrended calculation removes mean bias","duration":0,"failureMessages":[]}],"startTime":1758004511189,"endTime":1758004511198,"status":"passed","message":"","name":"/workspace/resonai/tests/unit/expressiveness.spec.ts"},{"assertionResults":[{"ancestorTitles":["","hzToCentsRelative"],"fullName":" hzToCentsRelative converts Hz to cents relative to reference","status":"passed","title":"converts Hz to cents relative to reference","duration":2,"failureMessages":[]},{"ancestorTitles":["","hzToCentsRelative"],"fullName":" hzToCentsRelative handles edge cases gracefully","status":"passed","title":"handles edge cases gracefully","duration":0,"failureMessages":[]},{"ancestorTitles":["","median"],"fullName":" median calculates median for odd length arrays","status":"passed","title":"calculates median for odd length arrays","duration":1,"failureMessages":[]},{"ancestorTitles":["","median"],"fullName":" median calculates median for even length arrays","status":"passed","title":"calculates median for even length arrays","duration":0,"failureMessages":[]},{"ancestorTitles":["","median"],"fullName":" median handles empty arrays","status":"passed","title":"handles empty arrays","duration":0,"failureMessages":[]},{"ancestorTitles":["","median"],"fullName":" median handles single element arrays","status":"passed","title":"handles single element arrays","duration":0,"failureMessages":[]},{"ancestorTitles":["","ema"],"fullName":" ema applies exponential moving average","status":"passed","title":"applies exponential moving average","duration":0,"failureMessages":[]},{"ancestorTitles":["","ema"],"fullName":" ema handles empty arrays","status":"passed","title":"handles empty arrays","duration":1,"failureMessages":[]},{"ancestorTitles":["","ema"],"fullName":" ema handles alpha = 1 (no smoothing)","status":"passed","title":"handles alpha = 1 (no smoothing)","duration":0,"failureMessages":[]},{"ancestorTitles":["","ema"],"fullName":" ema handles alpha = 0 (no change)","status":"passed","title":"handles alpha = 0 (no change)","duration":1,"failureMessages":[]},{"ancestorTitles":["","slopePerSecond"],"fullName":" slopePerSecond calculates slope for linear relationship","status":"passed","title":"calculates slope for linear relationship","duration":0,"failureMessages":[]},{"ancestorTitles":["","slopePerSecond"],"fullName":" slopePerSecond calculates negative slope","status":"passed","title":"calculates negative slope","duration":0,"failureMessages":[]},{"ancestorTitles":["","slopePerSecond"],"fullName":" slopePerSecond handles insufficient data","status":"passed","title":"handles insufficient data","duration":0,"failureMessages":[]},{"ancestorTitles":["","windowVoiced"],"fullName":" windowVoiced extracts voiced frames within window","status":"passed","title":"extracts voiced frames within window","duration":2,"failureMessages":[]},{"ancestorTitles":["","windowVoiced"],"fullName":" windowVoiced handles empty frames","status":"passed","title":"handles empty frames","duration":0,"failureMessages":[]},{"ancestorTitles":["","windowVoiced"],"fullName":" windowVoiced filters out unvoiced frames","status":"passed","title":"filters out unvoiced frames","duration":0,"failureMessages":[]},{"ancestorTitles":["","voicedDurationMs"],"fullName":" voicedDurationMs calculates duration from frame deltas","status":"passed","title":"calculates duration from frame deltas","duration":0,"failureMessages":[]},{"ancestorTitles":["","voicedDurationMs"],"fullName":" voicedDurationMs handles single frame","status":"passed","title":"handles single frame","duration":0,"failureMessages":[]},{"ancestorTitles":["","voicedDurationMs"],"fullName":" voicedDurationMs handles empty frames","status":"passed","title":"handles empty frames","duration":0,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody detects rising contour over ~400 ms","status":"passed","title":"detects rising contour over ~400 ms","duration":1,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody detects falling contour over ~400 ms","status":"passed","title":"detects falling contour over ~400 ms","duration":0,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody is flat on near-constant pitch with small noise","status":"passed","title":"is flat on near-constant pitch with small noise","duration":1,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody remains flat (insufficient) if voiced segment too short","status":"passed","title":"remains flat (insufficient) if voiced segment too short","duration":0,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody handles null (unvoiced) frames by ignoring them","status":"passed","title":"handles null (unvoiced) frames by ignoring them","duration":0,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody slope is ~0 for constant cents series","status":"passed","title":"slope is ~0 for constant cents series","duration":1,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody handles insufficient samples","status":"passed","title":"handles insufficient samples","duration":0,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody uses EMA smoothing when alpha > 0","status":"passed","title":"uses EMA smoothing when alpha > 0","duration":0,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody respects custom thresholds","status":"passed","title":"respects custom thresholds","duration":1,"failureMessages":[]},{"ancestorTitles":["","classifyProsody"],"fullName":" classifyProsody returns proper metadata","status":"passed","title":"returns proper metadata","duration":0,"failureMessages":[]}],"startTime":1758004511180,"endTime":1758004511191,"status":"passed","message":"","name":"/workspace/resonai/tests/unit/prosody.spec.ts"},{"assertionResults":[{"ancestorTitles":["","Progress Library","calculateTrainingSessionProgress"],"fullName":" Progress Library calculateTrainingSessionProgress calculates progress correctly for normal inputs","status":"passed","title":"calculates progress correctly for normal inputs","duration":2,"failureMessages":[]},{"ancestorTitles":["","Progress Library","calculateTrainingSessionProgress"],"fullName":" Progress Library calculateTrainingSessionProgress handles zero progress","status":"passed","title":"handles zero progress","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","calculateTrainingSessionProgress"],"fullName":" Progress Library calculateTrainingSessionProgress handles complete progress","status":"passed","title":"handles complete progress","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","calculateTrainingSessionProgress"],"fullName":" Progress Library calculateTrainingSessionProgress clamps negative steps to zero","status":"passed","title":"clamps negative steps to zero","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","calculateTrainingSessionProgress"],"fullName":" Progress Library calculateTrainingSessionProgress clamps overflow steps to total","status":"passed","title":"clamps overflow steps to total","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","calculateTrainingSessionProgress"],"fullName":" Progress Library calculateTrainingSessionProgress handles invalid total with safe fallback","status":"passed","title":"handles invalid total with safe fallback","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","calculateTrainingSessionProgress"],"fullName":" Progress Library calculateTrainingSessionProgress handles negative total with safe fallback","status":"passed","title":"handles negative total with safe fallback","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","calculateTrainingSessionProgress"],"fullName":" Progress Library calculateTrainingSessionProgress handles non-finite inputs safely","status":"passed","title":"handles non-finite inputs safely","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","getTrainingSessionProgress"],"fullName":" Progress Library getTrainingSessionProgress works with ProgressInput object","status":"passed","title":"works with ProgressInput object","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","safeGetTrainingSessionProgress"],"fullName":" Progress Library safeGetTrainingSessionProgress returns null for invalid input","status":"passed","title":"returns null for invalid input","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","safeGetTrainingSessionProgress"],"fullName":" Progress Library safeGetTrainingSessionProgress returns progress for valid input","status":"passed","title":"returns progress for valid input","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","createProgressCalculator"],"fullName":" Progress Library createProgressCalculator creates calculator for specific total","status":"passed","title":"creates calculator for specific total","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","isProgressComplete"],"fullName":" Progress Library isProgressComplete returns true for 100% progress","status":"passed","title":"returns true for 100% progress","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","isProgressComplete"],"fullName":" Progress Library isProgressComplete returns false for incomplete progress","status":"passed","title":"returns false for incomplete progress","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","isProgressAtStart"],"fullName":" Progress Library isProgressAtStart returns true for 0% progress","status":"passed","title":"returns true for 0% progress","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","isProgressAtStart"],"fullName":" Progress Library isProgressAtStart returns false for non-zero progress","status":"passed","title":"returns false for non-zero progress","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","getProgressStatusText"],"fullName":" Progress Library getProgressStatusText formats status text correctly","status":"passed","title":"formats status text correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isValidProgressInput"],"fullName":" Progress Library Type Guards isValidProgressInput validates correct ProgressInput","status":"passed","title":"validates correct ProgressInput","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isValidProgressInput"],"fullName":" Progress Library Type Guards isValidProgressInput rejects invalid inputs","status":"passed","title":"rejects invalid inputs","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isSafeNumber"],"fullName":" Progress Library Type Guards isSafeNumber validates safe numbers","status":"passed","title":"validates safe numbers","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isSafeNumber"],"fullName":" Progress Library Type Guards isSafeNumber rejects unsafe numbers","status":"passed","title":"rejects unsafe numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isPositiveInteger"],"fullName":" Progress Library Type Guards isPositiveInteger validates positive integers","status":"passed","title":"validates positive integers","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isPositiveInteger"],"fullName":" Progress Library Type Guards isPositiveInteger rejects non-positive or non-integers","status":"passed","title":"rejects non-positive or non-integers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isValidNumber"],"fullName":" Progress Library Type Guards isValidNumber validates valid numbers","status":"passed","title":"validates valid numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isValidNumber"],"fullName":" Progress Library Type Guards isValidNumber rejects invalid numbers","status":"passed","title":"rejects invalid numbers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isValidPositiveInteger"],"fullName":" Progress Library Type Guards isValidPositiveInteger validates positive integers","status":"passed","title":"validates positive integers","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isValidPositiveInteger"],"fullName":" Progress Library Type Guards isValidPositiveInteger rejects non-positive or non-integers","status":"passed","title":"rejects non-positive or non-integers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isValidNonNegativeInteger"],"fullName":" Progress Library Type Guards isValidNonNegativeInteger validates non-negative integers","status":"passed","title":"validates non-negative integers","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","Type Guards","isValidNonNegativeInteger"],"fullName":" Progress Library Type Guards isValidNonNegativeInteger rejects negative or non-integers","status":"passed","title":"rejects negative or non-integers","duration":1,"failureMessages":[]},{"ancestorTitles":["","Progress Library","clampProgressValue"],"fullName":" Progress Library clampProgressValue clamps values to range","status":"passed","title":"clamps values to range","duration":0,"failureMessages":[]},{"ancestorTitles":["","Progress Library","clampProgressValue"],"fullName":" Progress Library clampProgressValue handles invalid input with min fallback","status":"passed","title":"handles invalid input with min fallback","duration":0,"failureMessages":[]}],"startTime":1758004511191,"endTime":1758004511216,"status":"passed","message":"","name":"/workspace/resonai/tests/unit/lib/progress.spec.ts"}]}